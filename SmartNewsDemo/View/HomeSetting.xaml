<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:behavior="clr-namespace:SmartNewsDemo.Common.Behavior"
             mc:Ignorable="d"
             x:Class="SmartNewsDemo.View.HomeSetting">
    <ContentPage.Resources>
        <Style TargetType="Frame">
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="9"/>
            <Setter Property="HorizontalOptions" Value="EndAndExpand"/>
        </Style>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout BackgroundColor="{DynamicResource labelStyleColor}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
            </Grid>
            <StackLayout Orientation="Horizontal">
                <Label Text="FontSize"
                       Margin="20,0,0,0"
                       TextColor="{DynamicResource labelTextColor}"
                       FontAttributes="{DynamicResource labelStyleFontAtribute}"
                       FontFamily="{DynamicResource labelStyleFont}"
                       FontSize="{DynamicResource labelStylesize}"
                       VerticalOptions="CenterAndExpand"
                       HorizontalOptions="Start"/>
                <Slider x:Name="Value"
                        WidthRequest="200"
                        Grid.Column="1"
                        MinimumTrackColor="Blue"
                        MaximumTrackColor="BlueViolet"
                        ThumbColor="Red"
                        Maximum="25"
                        Minimum="15"
                        Value="{Binding Numbersize}"
                        HorizontalOptions="EndAndExpand">
                    <Slider.Behaviors>
                        <behavior:EventToCommandBehavior EventName="ValueChanged" Command="{Binding SliderChangedCommand}"/>
                    </Slider.Behaviors>
                </Slider>
            </StackLayout>
            <StackLayout Orientation="Horizontal" Grid.Row="1">
                <Label Text="Font"
                       TextColor="{DynamicResource labelTextColor}"
                       FontAttributes="{DynamicResource labelStyleFontAtribute}"
                       FontFamily="{DynamicResource labelStyleFont}"
                       FontSize="{DynamicResource labelStylesize}"
                       VerticalOptions="CenterAndExpand"
                       Margin="20,0,0,0"/>
                <Frame BackgroundColor="{Binding Source={x:Reference lblB}, Path=BackgroundColor}">
                    <Label x:Name="lblB" Text="Bold" FontAttributes="Bold" BackgroundColor="{Binding BoldClick}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding LabelCLickCommand}" CommandParameter="Bold"/>
                        </Label.GestureRecognizers>
                    </Label>
                </Frame>
                <Frame BackgroundColor="{Binding Source={x:Reference lblI}, Path=BackgroundColor}">
                    <Label x:Name="lblI" Text="Italic" FontAttributes="Italic" BackgroundColor="{Binding ItalicClick}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding LabelCLickCommand}" CommandParameter="Italic"/>
                        </Label.GestureRecognizers>
                    </Label>
                </Frame>
                <Frame BackgroundColor="{Binding Source={x:Reference lblN}, Path=BackgroundColor}">
                    <Label x:Name="lblN" Text="None" FontAttributes="None" BackgroundColor="{Binding NoneClick}">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding LabelCLickCommand}" CommandParameter="None"/>
                        </Label.GestureRecognizers>
                    </Label>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal" Grid.Row="2">
                <Label Text="Dark Mode"
                       Margin="20,10,0,0"
                       TextColor="{DynamicResource labelTextColor}"
                       FontAttributes="{DynamicResource labelStyleFontAtribute}"
                       FontFamily="{DynamicResource labelStyleFont}"
                       FontSize="{DynamicResource labelStylesize}"/>
                <Switch IsToggled="{Binding ModeONOFF}" HorizontalOptions="EndAndExpand">
                    <Switch.Behaviors>
                        <behavior:EventToCommandBehavior EventName="Toggled" Command="{Binding ToggledModeCommand}"/>
                    </Switch.Behaviors>
                </Switch>
            </StackLayout>
            <StackLayout Orientation="Horizontal" Grid.Row="3">
                <Label Text="Font Family"
                       TextColor="{DynamicResource labelTextColor}"
                       FontAttributes="{DynamicResource labelStyleFontAtribute}"
                       FontFamily="{DynamicResource labelStyleFont}"
                       FontSize="{DynamicResource labelStylesize}"
                       Margin="20,10,0,0"/>
                <Picker Title="Please chose Font"
                        WidthRequest="200"
                        Margin="0,5,5,0"
                        ItemsSource="{Binding ListFontFamily}"
                        SelectedItem="{Binding ItemsFont}"
                        HorizontalOptions="EndAndExpand">
                    <Picker.Behaviors>
                        <behavior:EventToCommandBehavior EventName="SelectedIndexChanged" Command="{Binding SeletedFontCommand}"/>
                    </Picker.Behaviors>
                </Picker>
            </StackLayout>
            <StackLayout Grid.Row="4" HorizontalOptions="FillAndExpand" Orientation="Horizontal">
                <Label Text="Notifications ON/OFF"
                       TextColor="{DynamicResource labelTextColor}"
                           FontAttributes="{DynamicResource labelStyleFontAtribute}"
                           FontFamily="{DynamicResource labelStyleFont}"
                           FontSize="{DynamicResource labelStylesize}"
                           Margin="20,10,0,0"
                           HorizontalOptions="StartAndExpand"/>
                <Switch IsToggled="{Binding NotificationONOFF}" HorizontalOptions="EndAndExpand" VerticalOptions="Center"/>
            </StackLayout>
            <Frame HorizontalOptions="FillAndExpand" BorderColor="DimGray" HasShadow="True" BackgroundColor="{DynamicResource labelStyleColor}">
            <StackLayout Orientation="Vertical" Grid.Row="5">
                <Label Text="Enter Message"
                       TextColor="{DynamicResource labelTextColor}"
                        FontAttributes="{DynamicResource labelStyleFontAtribute}"
                        FontFamily="{DynamicResource labelStyleFont}"
                        FontSize="{DynamicResource labelStylesize}"
                        Margin="20,10,0,0"
                        HorizontalOptions="StartAndExpand"/>
                <Editor HeightRequest="120" 
                        Text=" {Binding MessageText}" 
                        TextColor="Blue" 
                        BackgroundColor="{DynamicResource labelStyleColor}" 
                        HorizontalOptions="Fill"/>
                <StackLayout Orientation="Horizontal">
                    <Button Text="Push local" TextColor="Black" BackgroundColor="Red" HorizontalOptions="FillAndExpand" WidthRequest="100">
                        <Button.Behaviors>
                            <behavior:EventToCommandBehavior EventName="Clicked" Command="{Binding PushLocalCommand}"/>
                        </Button.Behaviors>
                    </Button>
                </StackLayout>
            </StackLayout>
            </Frame>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>